[{"/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/index.js":"1","/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/reportWebVitals.js":"2","/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/App.js":"3","/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/Pages/about.js":"4","/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/Pages/boards.js":"5","/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/Pages/home.js":"6","/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/Components/Footer.js":"7","/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/Pages/NotFound.js":"8","/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/Pages/cards.js":"9","/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/Pages/Selected.js":"10","/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/Components/Header.js":"11"},{"size":535,"mtime":1656693379820,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1656693379821,"results":"14","hashOfConfig":"13"},{"size":6093,"mtime":1658253119574,"results":"15","hashOfConfig":"13"},{"size":166,"mtime":1658176339198,"results":"16","hashOfConfig":"13"},{"size":3029,"mtime":1658176339198,"results":"17","hashOfConfig":"13"},{"size":163,"mtime":1658176339198,"results":"18","hashOfConfig":"13"},{"size":275,"mtime":1658176339180,"results":"19","hashOfConfig":"13"},{"size":192,"mtime":1658176339197,"results":"20","hashOfConfig":"13"},{"size":3052,"mtime":1658252787364,"results":"21","hashOfConfig":"13"},{"size":2213,"mtime":1658253397049,"results":"22","hashOfConfig":"13"},{"size":1366,"mtime":1658248627823,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"xnqc1s",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/index.js",[],["51","52"],"/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/reportWebVitals.js",[],"/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/App.js",["53","54","55","56"],"import React from \"react\";\nimport { useState, useReducer, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"./dropdown.css\";\nimport axios from \"axios\";\nimport { BrowserRouter, Route, Routes, useParams } from \"react-router-dom\";\nimport About from \"./Pages/about\";\nimport BoardsPage from \"./Pages/boards\";\nimport Home from \"./Pages/home\";\nimport CardsPage from \"./Pages/cards\";\nimport Header from \"./Components/Header\";\nimport \"./Styles/header.css\";\nimport NotFound from \"./Pages/NotFound\";\nimport Selected from \"./Pages/Selected\";\nimport Footer from \"./Components/Footer\";\n\nfunction App() {\n  //GET cards by board Id\n  const displayCards = async (id) => {\n    const response = await axios.get(\n      `http://orange-purple-inspo-board.herokuapp.com/cards/${id}`\n    );\n    setCards(response.data);\n  };\n  //setSelected Board by id\n  const getSelectedBoard = async (id) => {\n    const resp = await axios.get(\n      `https://orange-purple-inspo-board.herokuapp.com/boards/${id}`\n    );\n    setSelectedBoard(resp.data.board);\n  };\n\n  const addCardToBoard = (newCard) => {\n    const newCardData = [...cards];\n    const nextId = Math.max(...newCardData.map((card) => card.id)) + 1;\n\n    newCardData.push({\n      id: nextId,\n      likes_count: 0,\n    });\n  };\n  //submit forms\n  const addBoardData = (newBoard) => {\n    const newBoardData = [...boards];\n    const nextId = Math.max(...newBoardData.map((board) => board.id)) + 1;\n\n    newBoardData.push({\n      id: nextId,\n      title: newBoard.title,\n      owner: newBoard.owner,\n    });\n    setBoards(newBoardData);\n  };\n\n  //submit card forms\n  const addCardData = (newCard) => {\n    const newCardData = [...cards];\n    const nextId = Math.max(...newCardData.map((card) => card.id)) + 1;\n\n    newCardData.push({\n      id: nextId,\n      message: newCard.message,\n    });\n    setCards(newCardData);\n  };\n  //boards state\n  const [boards, setBoards] = useState([]);\n\n  //card state\n  const [cards, setCards] = useState([]);\n\n  //value of selected board\n  const [value, setValue] = useState(null);\n\n  //GET request boards\n  const getBoards = async () => {\n    const response = await axios.get(\n      \"https://orange-purple-inspo-board.herokuapp.com/boards\"\n    );\n    setBoards(response.data);\n  };\n\n  useEffect(() => {\n    getBoards();\n  }, []);\n\n  //like actions\n  const LIKE_ACTIONS = {\n    INCREMENT: \"increment\",\n    DECREMENT: \"decrement\",\n  };\n\n  const BOARD_ACTIONS = {\n    DELETE_BOARD: \"deleteBoard\",\n    ADD_CARD: \"addCard\",\n  };\n\n  //userReducer function to increment and decrement likesCount\n  const likesReducer = (likesState, action) => {\n    switch (action.type) {\n      case LIKE_ACTIONS.INCREMENT:\n        return { count: likesState.count + 1 };\n      case LIKE_ACTIONS.DECREMENT:\n        return { count: likesState.count - 1 };\n      default:\n        return likesState;\n    }\n  };\n  //increment and decrement likesCount\n  const [likesState, dispatch] = useReducer(likesReducer, { count: 0 });\n  //function to increment likesCount\n  const increment = () => {\n    dispatch({ type: LIKE_ACTIONS.INCREMENT });\n  };\n\n  //function to decrement likesCount\n  const decrement = () => {\n    dispatch({ type: LIKE_ACTIONS.DECREMENT });\n  };\n\n  //adds form elements to dropdown in board component\n  //send this state to SelectedBoard\n  const [selectedBoard, setSelectedBoard] = useState({\n    title: \"\",\n    owner: \"\",\n  });\n\n  //updates selectedBoard state & adds selectedBoard to SelectedBoard component onClick\n  const boardChange = (e) => {\n    setSelectedBoard(e.target.value);\n    if (e.target.value) {\n      // setSelectedHidden(false);\n    }\n  };\n\n  //Board actions with useReducer\n  //selectedBooards actions\n  //delete board\n  //add card\n  const boardReducer = (selectedBoardState, action) => {\n    switch (action.type) {\n      // case BOARD_ACTIONS.ADD_CARD:\n      // return setCardFormHidden(false);\n      // case BOARD_ACTIONS.DELETE_BOARD:\n      //   return boards.filter((form) => form.id !== action.payload.id);\n      default:\n        return selectedBoardState;\n    }\n  };\n  const [selectedBoardState, selectedBoardDispatch] = useReducer(\n    boardReducer,\n    []\n  );\n  const deleteBoard = () => {\n    selectedBoardDispatch({ type: BOARD_ACTIONS.DELETE_BOARD });\n  };\n\n  const addCard = () => {\n    selectedBoardDispatch({ type: BOARD_ACTIONS.ADD_CARD });\n  };\n\n  return (\n    <BrowserRouter>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/about\" element={<About />} />\n        <Route\n          path=\"/boards/:boardID\"\n          element={\n            <Selected\n              setSelectedBoard={setSelectedBoard}\n              boards={selectedBoard}\n              selectedBoardState={selectedBoardState}\n              deleteBoard={deleteBoard}\n              addCard={addCard}\n              cards={cards}\n            />\n          }\n        />\n        <Route\n          path=\"/boards\"\n          element={\n            <BoardsPage\n              getSelectedBoard={getSelectedBoard}\n              handleChange={boardChange}\n              options={boards}\n              prompt=\"Select Board\"\n              value={value}\n              onChange={(value) => setValue(value)}\n              addBoardData={addBoardData}\n              displayCards={displayCards}\n            />\n          }\n        />\n        <Route\n          path=\"/cards\"\n          element={\n            <CardsPage\n              addCardData={addCardData}\n              options={boards}\n              boards={boards}\n              setBoards={setBoards}\n              cards={cards}\n              // postCardToBoard={postCardToBoard}\n              selectedBoard={selectedBoard}\n              clickedBoard={(value) => setValue(value)}\n              addCardToBoard={addCardToBoard}\n            />\n          }\n        />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport function increment() {\n  return {\n    type: App.LIKE_ACTIONS.INCREMENT,\n  };\n}\n\nexport function decrement() {\n  return {\n    type: App.LIKE_ACTIONS.DECREMENT,\n  };\n}\n\nexport default App;\n","/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/Pages/about.js",[],"/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/Pages/boards.js",[],"/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/Pages/home.js",[],"/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/Components/Footer.js",["57"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Lavender from \"../Images/footer_lavender.png\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <img src={Lavender} width={80} height={80} alt=\"\" />\n    </footer>\n  );\n};\n\nexport default Footer;\n","/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/Pages/NotFound.js",[],"/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/Pages/cards.js",["58"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../Styles/cardsdropdown.css\";\n\nconst CardsPage = ({ options, boards, addCardToBoard }) => {\n  //search query state\n  const [query, setQuery] = useState(\"\");\n  const [cardFormData, setCardFormData] = useState({\n    message: \"\",\n  });\n  const [error, setError] = useState(false);\n\n  const onMessageChange = (e) => {\n    setCardFormData({\n      ...cardFormData,\n      message: e.target.value,\n    });\n  };\n\n  const onChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const handleError = () => {\n    setError(true);\n  };\n\n  const onSearch = (searchTerm) => {\n    if (cardFormData.length === 0) {\n      handleError();\n      return;\n    } else {\n      setQuery(searchTerm);\n      boards.filter((board) => {\n        if (board.title === searchTerm) {\n          addCardToBoard({\n            message: cardFormData.message,\n            board_id: board.id,\n          });\n          postCardToBoard(board.id);\n          return board.id;\n        } else {\n          return board;\n        }\n      });\n    }\n  };\n\n  const postCardToBoard = (id) => {\n    return axios.post(\n      `https://orange-purple-inspo-board.herokuapp.com/cards/${id}`,\n      {\n        message: cardFormData.message,\n        likes_count: cardFormData.likes_count,\n        board_id: id,\n      }\n    );\n  };\n\n  const onLikeButtonClick = () => {};\n\n  return (\n    <div className=\"App\">\n      <section className=\"form\">\n        ꒰ა ♡ ໒꒱ Create Card ✧･ﾟ: *✧･ﾟ:* 𓆩♡𓆪\n        <form>\n          <label>Title</label>\n          <input\n            type=\"text\"\n            onChange={onMessageChange}\n            placeholder=\"Type a message...\"\n          />\n          <label>\n            {error ? <h4>Please type a message to continue</h4> : \"\"}\n          </label>\n          <hr />\n          <label>Board</label>\n          <input\n            type=\"text\"\n            value={query}\n            placeholder=\"Search Boards\"\n            onChange={onChange}\n          />\n          <hr />\n          {error ? <h4>Please select a board to continue</h4> : \"\"}\n\n          <div className=\"cards-dropdown\">\n            <div className=\"dropdown-search\" type=\"text\">\n              {options\n                .filter((option) => {\n                  const searchTerm = query.toLowerCase();\n                  const title = option.title.toLowerCase();\n\n                  return searchTerm && title.includes(searchTerm);\n                })\n                .map((option) => {\n                  return (\n                    <div\n                      className=\"dropdown-row\"\n                      key={option.id}\n                      onClick={() => onSearch(option.title)}\n                      // onClick={selectOption}\n                    >\n                      {option.title}\n                    </div>\n                  );\n                })}\n            </div>\n          </div>\n          <button className=\"form-button\">Add Card</button>\n        </form>\n      </section>\n    </div>\n  );\n};\n\nexport default CardsPage;\n","/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/Pages/Selected.js",["59","60","61","62","63"],"/Users/cathos/mnxc-sync/Documents/AdaAcademy/ada/inspiration-board/front-end-inspiration-board/src/Components/Header.js",["64"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Tea from \"../Images/title_tea.png\";\nimport Hplant from \"../Images/hanging_plant.png\";\nimport Plant from \"../Images/plant.png\";\nimport Sleep from \"../Images/sleeping_cat.png\";\nimport Books from \"../Images/book-stack.png\";\nimport { motion } from \"framer-motion/dist/framer-motion\";\n\nconst Header = () => {\n  return (\n    <motion.header className=\"Header\" animate={{}}>\n      <motion.h1\n        className=\"animate\"\n        animate={{ opacity: 1 }}\n        initial={{ opacity: 0.2 }}\n      >\n        ♥ InspoBoard ♥\n      </motion.h1>\n      <motion.img\n        src={Tea}\n        width={80}\n        height={80}\n        alt=\"\"\n        animate={{ scale: 1 }}\n        initial={{ scale: 1.5 }}\n      />\n      <nav className=\"links\">\n        <motion.img\n          src={Plant}\n          width={70}\n          height={70}\n          alt=\"\"\n          initial={{ y: -100 }}\n          animate={{ y: 0 }}\n        />\n        <img src={Books} width={70} height={70} alt=\"\" />\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/About\">About</Link>\n        <Link to=\"/boards\">Boards</Link>\n        <Link to=\"/cards\">Cards</Link>\n      </nav>\n      <img src={Sleep} width={80} height={80} alt=\"\" />\n      {/* <button>Ψ ♥* Dark Mode .｡:†</button> */}\n    </motion.header>\n  );\n};\n\nexport default Header;\n",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":6,"column":40,"nodeType":"71","messageId":"72","endLine":6,"endColumn":49},{"ruleId":"69","severity":1,"message":"73","line":110,"column":10,"nodeType":"71","messageId":"72","endLine":110,"endColumn":20},{"ruleId":"69","severity":1,"message":"74","line":112,"column":9,"nodeType":"71","messageId":"72","endLine":112,"endColumn":18},{"ruleId":"69","severity":1,"message":"75","line":117,"column":9,"nodeType":"71","messageId":"72","endLine":117,"endColumn":18},{"ruleId":"69","severity":1,"message":"76","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":14},{"ruleId":"69","severity":1,"message":"77","line":60,"column":9,"nodeType":"71","messageId":"72","endLine":60,"endColumn":26},{"ruleId":"69","severity":1,"message":"78","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":17},{"ruleId":"69","severity":1,"message":"79","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":13},{"ruleId":"69","severity":1,"message":"70","line":4,"column":10,"nodeType":"71","messageId":"72","endLine":4,"endColumn":19},{"ruleId":"69","severity":1,"message":"80","line":13,"column":9,"nodeType":"71","messageId":"72","endLine":13,"endColumn":20},{"ruleId":"69","severity":1,"message":"81","line":17,"column":9,"nodeType":"71","messageId":"72","endLine":17,"endColumn":16},{"ruleId":"69","severity":1,"message":"82","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":14},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'likesState' is assigned a value but never used.","'increment' is assigned a value but never used.","'decrement' is assigned a value but never used.","'Link' is defined but never used.","'onLikeButtonClick' is assigned a value but never used.","'PropTypes' is defined but never used.","'axios' is defined but never used.","'removeBoard' is assigned a value but never used.","'newCard' is assigned a value but never used.","'Hplant' is defined but never used.","no-global-assign","no-unsafe-negation"]